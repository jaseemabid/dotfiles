{
    "[css][json][jsonc][scss][typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "editor.wordWrap": "off",
        "rewrap.autoWrap.enabled": false
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": false
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.quickSuggestions": {
            "comments": "off",
            "other": "off",
            "strings": "off"
        },
        // This would be great, but breaks markdown tables, reference links and readme.com raw mode
        "rewrap.onSave": false,
        "rewrap.wrappingColumn": 100
    },
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true
    },
    "[rust]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": "always"
        },
        "editor.formatOnSave": true
    },
    "[typescript]": {
        "editor.codeActionsOnSave": {
            // Removing unused imports is too eager and buggy to be useful
            "source.organizeImports": "never",
            "source.sortImports": "explicit"
        }
    },
    "[yaml]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "bazel.buildifierExecutable": "/opt/homebrew/bin/buildifier",
    "breadcrumbs.showProperties": false,
    "breadcrumbs.showStructs": false,
    "cSpell.customDictionaries": {
        "custom": true,
        "jabid": {
            "addWords": true,
            "name": "jabid",
            "path": "~/.dictionary",
            "scope": "user"
        }
    },
    "D2.execPath": "/opt/homebrew/bin/d2",
    "D2.previewLayout": "elk",
    "editor.accessibilitySupport": "off",
    "editor.codeLensFontFamily": "Monaco, 'Apple Color Emoji'",
    "editor.fontFamily": "'Monaspace Neon', 'Apple Color Emoji', monospace",
    "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'ss09', 'liga'",
    "editor.formatOnSave": false,
    "editor.inlayHints.enabled": "offUnlessPressed",
    "editor.inlayHints.padding": true,
    "editor.minimap.enabled": false,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.showSlider": "always",
    "editor.minimap.size": "fit",
    "editor.renderWhitespace": "none",
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 120,
    "emeraldwalk.runonsave": {
        "commands": [
            {
                "cmd": "just --fmt --unstable",
                "match": "Justfile"
            }
        ]
    },
    "eslint.run": "onSave",
    "explorer.excludeGitIgnore": true,
    "extensions.autoCheckUpdates": false,
    "extensions.autoUpdate": false,
    "files.associations": {
        "*.tera": "html"
    },
    "files.autoSave": "onFocusChange",
    "files.exclude": {
        ".pytest_cache": true,
        ".venv": true,
        "**/__pycache__": true
    },
    "files.insertFinalNewline": true,
    "files.readonlyInclude": {
        ".venv/**": true
    },
    "files.trimTrailingWhitespace": true,
    "files.watcherExclude": {
        "**/.ammonite": true,
        "**/.bloop": true,
        "**/.metals": true
    },
    "git.confirmSync": false,
    "git.openRepositoryInParentFolders": "always",
    "github.copilot.enable": {
        "*": false,
        "go": true,
        "markdown": false,
        "plaintext": false,
        "scminput": false
    },
    "json.schemas": [],
    "jupyter.askForKernelRestart": false,
    "markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",
    "markdown.occurrencesHighlight.enabled": true,
    "markdown.suggest.paths.includeWorkspaceHeaderCompletions": "onSingleOrDoubleHash",
    "markdown.validate.unusedLinkDefinitions.enabled": "warning",
    "notebook.codeActionsOnSave": {
        // Explict == explicit file save
        "source.fixAll": "explicit",
        "source.organizeImports": "explicit"
    },
    "notebook.dragAndDropEnabled": false,
    "notebook.formatOnSave.enabled": true,
    "notebook.outline.showCodeCells": true,
    "notebook.showCellStatusBar": "hidden",
    "notebook.showFoldingControls": "always",
    "notebook.undoRedoPerCell": false,
    "prettier.documentSelectors": ["**/*.{html,tera}"],
    "prettier.tabWidth": 4,
    "python.analysis.supportRestructuredText": true,
    "python.missingPackage.severity": "Warning",
    "redhat.telemetry.enabled": false,
    "rewrap.autoWrap.enabled": true,
    "rewrap.wrappingColumn": 120,
    "rust-analyzer.check.command": "clippy",
    // Proc macros generated by binrw's temp
    "rust-analyzer.diagnostics.disabled": ["E0063"],
    "rust-analyzer.procMacro.enable": false, // This fails badly on rust nightly.
    "security.workspace.trust.untrustedFiles": "open",
    "settingsSync.ignoredExtensions": [
        "coolbear.systemd-unit-file",
        "chrischinchilla.vale-vscode"
    ],
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.fontFamily": "MesloLGS NF",
    "terminal.integrated.showExitAlert": false,
    "testing.saveBeforeTest": false,
    "typescript.enablePromptUseWorkspaceTsdk": true,
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "typescript.suggest.completeFunctionCalls": true,
    "vale.doNotShowWarningForFileToBeSavedBeforeLinting": true,
    "vim.enableNeovim": true,
    "vim.handleKeys": {
        "<C-<SPACE>>": true,
        "<C-d>": true,
        "<C-space>": true
    },
    "vim.leader": "<SPACE>",
    "vim.neovimUseConfigFile": true,
    "vim.normalModeKeyBindings": [
        /*
         * Default keybindings
         *
         * gd - Jump to definition. https://github.com/VSCodeVim/Vim/blob/e6f171d/src/actions/commands/actions.ts#L1071
         * gh - Hover over symbol. https://github.com/VSCodeVim/Vim/blob/e6f171d/src/actions/commands/actions.ts#L2491
         *
         */
        {
            "before": ["]", "]"],
            "commands": ["editor.action.marker.next"],
            "silent": true
        },
        {
            "before": ["[", "["],
            "commands": ["editor.action.marker.prev"],
            "silent": true
        },
        {
            "before": ["g", "s"],
            "commands": ["editor.action.revealDefinition"],
            "silent": true
        },
        {
            "before": ["g", "i"],
            "commands": ["editor.action.goToImplementation"],
            "silent": true
        },
        {
            "before": ["g", "t"],
            "commands": ["editor.action.goToTypeDefinition"],
            "silent": true
        },
        {
            "before": ["<leader>", "o"],
            "commands": ["workbench.action.gotoSymbol"],
            "silent": true
        },
        {
            "before": ["<leader>", "O"],
            "commands": ["workbench.action.showAllSymbols"],
            "silent": true
        },
        {
            "before": ["<leader>", "r"],
            "commands": ["editor.action.rename"],
            "silent": true
        },
        {
            "before": ["<leader>", "t"],
            "commands": ["editor.action.refactor"],
            "silent": true
        },
        // Peek declaration. Very similar to hover, but on leader key.
        {
            "before": ["<leader>", "p"],
            "commands": ["editor.action.peekDeclaration"],
            "silent": true
        }
    ],
    "vim.statusBarColors.visualline": "",
    "vim.textwidth": 80,
    "vim.useCtrlKeys": true,
    "vim.useSystemClipboard": true,
    "window.autoDetectColorScheme": true,
    "window.customTitleBarVisibility": "never",
    "window.nativeTabs": true,
    "window.title": "${rootName}${separator}${profileName}",
    "window.titleBarStyle": "native",
    "window.zoomLevel": 1,
    "workbench.preferredLightColorTheme": "Flexoki Light",
    "workbench.startupEditor": "none",
    "yaml.disableAdditionalProperties": true,
    "yaml.disableDefaultProperties": true,
    "yaml.format.printWidth": 120,
    "yaml.maxItemsComputed": 30000,
    "zenMode.fullScreen": false,
    "zenMode.hideStatusBar": false
}
